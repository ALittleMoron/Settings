// Поместите настраиваемые сочетания клавиш в этот файл, чтобы переопределить сочетания клавиш по умолчанию.
[
  {
    "key": "ctrl+alt+'",
    "command": "shellLauncher.launch"
  },
  {
    "key": "ctrl+alt+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+alt+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+f",
    "command": "find-it-faster.findFiles"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-find-it-faster.findFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+alt+f",
    "command": "actions.find"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "-list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+q",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+x",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+[BracketRight]",
    "command": "workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "emojisense.quickEmojitext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-emojisense.quickEmojitext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+k b",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+k e",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k j",
    "command": "terminal.focus"
  }
]
